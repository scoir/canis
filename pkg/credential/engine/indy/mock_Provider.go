// Code generated by mockery v1.0.0. DO NOT EDIT.

package indy

import (
	kms "github.com/hyperledger/aries-framework-go/pkg/kms"
	mock "github.com/stretchr/testify/mock"

	storage "github.com/hyperledger/aries-framework-go/pkg/storage"
)

// MockProvider is an autogenerated mock type for the Provider type
type MockProvider struct {
	mock.Mock
}

// IndyVDR provides a mock function with given fields:
func (_m *MockProvider) IndyVDR() (VDRClient, error) {
	ret := _m.Called()

	var r0 VDRClient
	if rf, ok := ret.Get(0).(func() VDRClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(VDRClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// KMS provides a mock function with given fields:
func (_m *MockProvider) KMS() kms.KeyManager {
	ret := _m.Called()

	var r0 kms.KeyManager
	if rf, ok := ret.Get(0).(func() kms.KeyManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kms.KeyManager)
		}
	}

	return r0
}

// Oracle provides a mock function with given fields:
func (_m *MockProvider) Oracle() Oracle {
	ret := _m.Called()

	var r0 Oracle
	if rf, ok := ret.Get(0).(func() Oracle); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Oracle)
		}
	}

	return r0
}

// StorageProvider provides a mock function with given fields:
func (_m *MockProvider) StorageProvider() storage.Provider {
	ret := _m.Called()

	var r0 storage.Provider
	if rf, ok := ret.Get(0).(func() storage.Provider); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.Provider)
		}
	}

	return r0
}
