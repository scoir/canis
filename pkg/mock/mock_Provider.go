// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import (
	storage "github.com/hyperledger/aries-framework-go/pkg/storage"
	"github.com/stretchr/testify/mock"
)

// MockProvider is an autogenerated mock type for the Provider type
type MockProvider struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockProvider) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CloseStore provides a mock function with given fields: name
func (_m *MockProvider) CloseStore(name string) error {
	ret := _m.Called(name)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OpenStore provides a mock function with given fields: name
func (_m *MockProvider) OpenStore(name string) (storage.Store, error) {
	ret := _m.Called(name)

	var r0 storage.Store
	if rf, ok := ret.Get(0).(func(string) storage.Store); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.Store)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
